#!/usr/bin/env bash
FILE=${1:-./Context/conjuration_log.json}

spinner="/|\\-"  # animation frames
i=0

# ─────────────────────────────  build baseline  ────────────────────────────────
BASE=/tmp/.jsonwatch_baseline.$$
jq -r '
  paths(scalars) as $p |
  "\($p | join(" → "))\t\(getpath($p))"
' "$FILE" > "$BASE"

# layout constants
LINES=$(tput lines)            # rows  in terminal
COLS=$(tput cols)              # width in characters
KEYW=$(( COLS/2 ))             # key column ~ half screen  (tweak if desired)

center () {                    # centre-text helper
  local text="${1}" space pad
  space=$(( COLS-KEYW-2 ))     # -2 for bullet+gap
  [[ ${#text} -gt $space ]] && text="${text:0:space-3}…"   # truncate long
  pad=$(( (space - ${#text}) / 2 -10))
  printf "%*s%s%*s" "$pad" '' "$text" "$(( space-pad-${#text} ))" ''
}

# ─── static header ────────────────────────────────────────────────────────────
tput civis
printf "%s[ ]\n" "$header"                       # row 0
printf '%*s\n' "$COLS" '' | tr ' ' '─'          # row 1  (rule)

# remember how many rows the header consumes
table_top=2                                     # first row of table

while true; do

  # update spinner in-place ─ just one char
  tput cup 0 "$spin_col"
  printf "\033[2m%c\033[0m" "${spinner:i++%4:1}"

  tput cup "$table_top" 0                       # jump to table start

  # ───── flatten live JSON
  CUR=$(mktemp)
  jq -r '
    paths(scalars) as $p |
    "\($p | join(" → "))\t\(getpath($p))"
  ' "$FILE" > "$CUR"

  # ───── paint table
  while IFS=$'\t' read -r key val; do
    orig=$(grep -F "$key"$'\t' "$BASE" | cut -f2-)
    changed=$([[ "$val" != "$orig" ]] && echo 1 || echo 0)
    printf '• %-*s ' "$((KEYW-2))" "$key"   # bullet + left-justified key
    if (( changed )); then
      printf '\033[33m'                     # yellow
      center "$val"
      printf '\033[0m\n'
    else
      center "$val"; echo
    fi
  done < "$CUR"

  # pad to full height so the screen never “shrinks”
  used=$(( $(wc -l < "$CUR") + 2 ))        # +2 header lines
  for (( r=used; r<LINES; r++ )); do echo; done
  
  # clear whatever is left *below* the new table, once:
  tput ed
  rm -f "$CUR"
  sleep 1
done
